
from django.db import migrations, models
import datetime
import django_countries.fields
from django.conf import settings


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('mudur', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Accommodation',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('gender', models.CharField(max_length=1, verbose_name='Gender', choices=[('H', 'Hepsi'), ('K', 'Kadin'), ('E', 'Erkek')])),
                ('usertype', models.CharField(max_length=15, verbose_name='User Type', choices=[('stu', 'student'), ('inst', 'instructor'), ('hepsi', 'hepsi')])),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('address', models.CharField(max_length=300, verbose_name='Address')),
                ('website', models.CharField(max_length=300, verbose_name='Website')),
                ('site', models.ForeignKey(to='mudur.Site')),
            ],
            options={
                'verbose_name': 'Accommodation',
                'verbose_name_plural': 'Accommodations',
            },
        ),
        migrations.CreateModel(
            name='InstructorInformation',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('transportation', models.CharField(max_length=1, verbose_name='Transportation', choices=[('1', 'Otob\xc3\xbcs'), ('0', 'U\xc3\xa7ak'), ('3', 'Di\xc4\x9fer'), ('2', 'Araba')])),
                ('additional_information', models.CharField(max_length=300, null=True, verbose_name='Additional Information')),
                ('arrival_date', models.DateField(default=datetime.date.today, verbose_name='Arrival Date')),
                ('departure_date', models.DateField(default=datetime.date.today, verbose_name='Departure Date')),
            ],
            options={
                'verbose_name': 'Egitmen Ek Bilgiler',
                'verbose_name_plural': 'Egitmen Ek Bilgiler',
            },
        ),
        migrations.CreateModel(
            name='SubscribeNotice',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('usertype', models.CharField(max_length=4, verbose_name='User Type', choices=[('stu', 'student'), ('inst', 'instructor'), ('hepsi', 'hepsi')])),
                ('subnotice', models.TextField(verbose_name='Subscription Notice')),
            ],
        ),
        migrations.CreateModel(
            name='TrainessNote',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('note', models.CharField(max_length=255, verbose_name='Note')),
                ('note_date', models.DateTimeField(default=datetime.datetime.now)),
            ],
        ),
        migrations.CreateModel(
            name='UserAccomodationPref',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('usertype', models.CharField(max_length=30, verbose_name='User Type', choices=[('stu', 'student'), ('inst', 'instructor'), ('hepsi', 'hepsi')])),
                ('preference_order', models.SmallIntegerField(default=1)),
                ('approved', models.BooleanField(default=False)),
                ('accomodation', models.ForeignKey(to='userprofile.Accommodation')),
            ],
            options={
                'verbose_name': 'Participant Accommodation Preference',
                'verbose_name_plural': 'Participant Accommodation Preferences',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('birthdate', models.DateField(default=datetime.date(1970, 1, 1), verbose_name='Bird Date')),
                ('tckimlikno', models.CharField(max_length=11, verbose_name='Turkish ID No', blank=True)),
                ('ykimlikno', models.CharField(max_length=11, verbose_name='Foreigner ID No', blank=True)),
                ('gender', models.CharField(max_length=1, verbose_name='Gender', choices=[('K', 'Female'), ('E', 'Male')])),
                ('mobilephonenumber', models.CharField(max_length=14, verbose_name='Mobile Phone Number')),
                ('address', models.TextField(verbose_name='Home Address')),
                ('jo', models.CharField(max_length=40, verbose_name='Jo')),
                ('city', models.CharField(max_length=40, verbose_name='City')),
                ('country', django_countries.fields.CountryField(default='TR', max_length=2, verbose_name='Country')),
                ('title', models.CharField(max_length=40, verbose_name='Title')),
                ('organization', models.CharField(max_length=200, verbose_name='Organization')),
                ('university', models.CharField(blank=True, max_length=300, verbose_name='University', choices=[('Abant \xc4\xb0zzet Baysal \xc3\x9cniversitesi (Bolu)', 'Abant \xc4\xb0zzet Baysal \xc3\x9cniversitesi (Bolu)'), ('Abdullah G\xc3\xbcl \xc3\x9cniversitesi (Kayseri)', 'Abdullah G\xc3\xbcl \xc3\x9cniversitesi (Kayseri)'), ('Ac\xc4\xb1badem \xc3\x9cniversitesi (\xc4\xb0stanbul)', 'Ac\xc4\xb1badem \xc3\x9cniversitesi (\xc4\xb0stanbul)'), ('Adana Bilim ve Teknoloji \xc3\x9cniversitesi (Adana)', 'Adana Bilim ve Teknoloji \xc3\x9cniversitesi (Adana)'), ('Ad\xc4\xb1yaman \xc3\x9cniversitesi (Ad\xc4\xb1yaman)', 'Ad\xc4\xb1yaman \xc3\x9cniversitesi (Ad\xc4\xb1yaman)'), ('Adnan Menderes \xc3\x9cniversitesi (Ayd\xc4\xb1n)', 'Adnan Menderes \xc3\x9cniversitesi (Ayd\xc4\xb1n)'), ('Afyon Kocatepe \xc3\x9cniversitesi(Afyon)', 'Afyon Kocatepe \xc3\x9cniversitesi(Afyon)'), ('A\xc4\x9fr\xc4\xb1 \xc4\xb0brahim \xc3\x87e\xc3\xa7en \xc3\x9cniversitesi(A\xc4\x9fr\xc4\xb1)', 'A\xc4\x9fr\xc4\xb1 \xc4\xb0brahim \xc3\x87e\xc3\xa7en \xc3\x9cniversitesi(A\xc4\x9fr\xc4\xb1)'), ('Ahi Evran \xc3\x9cniversitesi(K\xc4\xb1r\xc5\x9fehir)', 'Ahi Evran \xc3\x9cniversitesi(K\xc4\xb1r\xc5\x9fehir)'), ('Akdeniz \xc3\x9cniversitesi (Antalya)', 'Akdeniz \xc3\x9cniversitesi (Antalya)'), ('Aksaray \xc3\x9cniversitesi (Aksaray)', 'Aksaray \xc3\x9cniversitesi (Aksaray)'), ('Alanya Alaaddin Keykubat \xc3\x9cniversitesi (Antalya)', 'Alanya Alaaddin Keykubat \xc3\x9cniversitesi (Antalya)'), ('Amasya \xc3\x9cniversitesi (Amasya)', 'Amasya \xc3\x9cniversitesi (Amasya)'), ('Anadolu \xc3\x9cniversitesi (Eski\xc5\x9fehir)', 'Anadolu \xc3\x9cniversitesi (Eski\xc5\x9fehir)'), ('Ankara Sosyal Bilimler \xc3\x9cniversitesi(Ankara)', 'Ankara Sosyal Bilimler \xc3\x9cniversitesi(Ankara)'), ('Ankara \xc3\x9cniversitesi(Ankara)', 'Ankara \xc3\x9cniversitesi(Ankara)'), ('Ardahan \xc3\x9cniversitesi(Ardahan)', 'Ardahan \xc3\x9cniversitesi(Ardahan)'), ('Artvin \xc3\x87oruh \xc3\x9cniversitesi(Artvin)', 'Artvin \xc3\x87oruh \xc3\x9cniversitesi(Artvin)'), ('Ata\xc5\x9fehir Ad\xc4\xb1g\xc3\xbczel Meslek Y\xc3\xbcksekokulu(\xc4\xb0stanbul)', 'Ata\xc5\x9fehir Ad\xc4\xb1g\xc3\xbczel Meslek Y\xc3\xbcksekokulu(\xc4\xb0stanbul)'), ('Atat\xc3\xbcrk \xc3\x9cniversitesi (Erzurum)', 'Atat\xc3\xbcrk \xc3\x9cniversitesi (Erzurum)'), ('At\xc4\xb1l\xc4\xb1m \xc3\x9cniversitesi (Ankara)', 'At\xc4\xb1l\xc4\xb1m \xc3\x9cniversitesi (Ankara)'), ('Avrasya \xc3\x9cniversitesi (Trabzon)', 'Avrasya \xc3\x9cniversitesi (Trabzon)'), ('Avrupa Meslek Y\xc3\xbcksek Okulu (\xc4\xb0stanbul)', 'Avrupa Meslek Y\xc3\xbcksek Okulu (\xc4\xb0stanbul)'), ('Bah\xc3\xa7e\xc5\x9fehir \xc3\x9cniversitesi(\xc4\xb0stanbul)', 'Bah\xc3\xa7e\xc5\x9fehir \xc3\x9cniversitesi(\xc4\xb0stanbul)'), ('Bal\xc4\xb1kesir \xc3\x9cniversitesi(Bal\xc4\xb1kesir)', 'Bal\xc4\xb1kesir \xc3\x9cniversitesi(Bal\xc4\xb1kesir)'), ('Band\xc4\xb1rma Onyedi Eyl\xc3\xbcl \xc3\x9cniversitesi(Bal\xc4\xb1kesir)', 'Band\xc4\xb1rma Onyedi Eyl\xc3\xbcl \xc3\x9cniversitesi(Bal\xc4\xb1kesir)'), ('Bart\xc4\xb1n \xc3\x9cniversitesi(Bart\xc4\xb1n)', 'Bart\xc4\xb1n \xc3\x9cniversitesi(Bart\xc4\xb1n)'), ('Ba\xc5\x9fkent \xc3\x9cniversitesi (Ankara)', 'Ba\xc5\x9fkent \xc3\x9cniversitesi (Ankara)'), ('Batman \xc3\x9cniversitesi (Batman)', 'Batman \xc3\x9cniversitesi (Batman)'), ('Bayburt \xc3\x9cniversitesi (Bayburt)', 'Bayburt \xc3\x9cniversitesi (Bayburt)'), ('Beykent \xc3\x9cniversitesi (\xc4\xb0stanbul)', 'Beykent \xc3\x9cniversitesi (\xc4\xb0stanbul)'), ('Beykoz Lojistik Meslek Y\xc3\xbcksek Okulu (\xc4\xb0stanbul)', 'Beykoz Lojistik Meslek Y\xc3\xbcksek Okulu (\xc4\xb0stanbul)'), ('Bezm-i \xc3\x82lem Vak\xc4\xb1f \xc3\x9cniversitesi (\xc4\xb0stanbul)', 'Bezm-i \xc3\x82lem Vak\xc4\xb1f \xc3\x9cniversitesi (\xc4\xb0stanbul)'), ('Bilecik \xc5\x9eeyh Edebali \xc3\x9cniversitesi (Bilecik)', 'Bilecik \xc5\x9eeyh Edebali \xc3\x9cniversitesi (Bilecik)'), ('Bilkent \xc3\x9cniversitesi (Ankara)', 'Bilkent \xc3\x9cniversitesi (Ankara)'), ('Bing\xc3\xb6l \xc3\x9cniversitesi (Bing\xc3\xb6l)', 'Bing\xc3\xb6l \xc3\x9cniversitesi (Bing\xc3\xb6l)'), ('Biruni \xc3\x9cniversitesi (\xc4\xb0stanbul)', 'Biruni \xc3\x9cniversitesi (\xc4\xb0stanbul)'), ('Bitlis Eren \xc3\x9cniversitesi (Bitlis)', 'Bitlis Eren \xc3\x9cniversitesi (Bitlis)'), ('Bo\xc4\x9fazi\xc3\xa7i \xc3\x9cniversitesi (\xc4\xb0stanbul)', 'Bo\xc4\x9fazi\xc3\xa7i \xc3\x9cniversitesi (\xc4\xb0stanbul)'), ('Bozok \xc3\x9cniversitesi (Yozgat)', 'Bozok \xc3\x9cniversitesi (Yozgat)'), ('Bursa Orhangazi \xc3\x9cniversitesi (Bursa)', 'Bursa Orhangazi \xc3\x9cniversitesi (Bursa)'), ('Bursa Teknik \xc3\x9cniversitesi (Bursa)', 'Bursa Teknik \xc3\x9cniversitesi (Bursa)'), ('B\xc3\xbclent Ecevit \xc3\x9cniversitesi (Zonguldak)', 'B\xc3\xbclent Ecevit \xc3\x9cniversitesi (Zonguldak)'), ('Canik Ba\xc5\x9far\xc4\xb1 \xc3\x9cniversitesi (Samsun)', 'Canik Ba\xc5\x9far\xc4\xb1 \xc3\x9cniversitesi (Samsun)'), ('Cel\xc3\xa2l Bayar \xc3\x9cniversitesi (Manisa)', 'Cel\xc3\xa2l Bayar \xc3\x9cniversitesi (Manisa)'), ('Cumhuriyet \xc3\x9cniversitesi (Sivas)', 'Cumhuriyet \xc3\x9cniversitesi (Sivas)'), ('\xc3\x87a\xc4\x9f \xc3\x9cniversitesi (Tarsus-\xc4\xb0\xc3\xa7el)', '\xc3\x87a\xc4\x9f \xc3\x9cniversitesi (Tarsus-\xc4\xb0\xc3\xa7el)'), ('\xc3\x87anakkale Onsekiz Mart \xc3\x9cniversitesi(\xc3\x87anakkale)', '\xc3\x87anakkale Onsekiz Mart \xc3\x9cniversitesi(\xc3\x87anakkale)'), ('\xc3\x87ankaya \xc3\x9cniversitesi (Ankara)', '\xc3\x87ankaya \xc3\x9cniversitesi (Ankara)'), ('\xc3\x87ank\xc4\xb1r\xc4\xb1 Karatekin \xc3\x9cniversitesi (\xc3\x87ank\xc4\xb1r\xc4\xb1)', '\xc3\x87ank\xc4\xb1r\xc4\xb1 Karatekin \xc3\x9cniversitesi (\xc3\x87ank\xc4\xb1r\xc4\xb1)'), ('\xc3\x87ukurova \xc3\x9cniversitesi (Adana)', '\xc3\x87ukurova \xc3\x9cniversitesi (Adana)'), ('Dicle \xc3\x9cniversitesi (Diyarbak\xc4\xb1r)', 'Dicle \xc3\x9cniversitesi (Diyarbak\xc4\xb1r)'), ('Do\xc4\x9fu\xc5\x9f \xc3\x9cniversitesi (\xc4\xb0stanbul)', 'Do\xc4\x9fu\xc5\x9f \xc3\x9cniversitesi (\xc4\xb0stanbul)'), ('Dokuz Eyl\xc3\xbcl \xc3\x9cniversitesi (\xc4\xb0zmir)', 'Dokuz Eyl\xc3\xbcl \xc3\x9cniversitesi (\xc4\xb0zmir)'), ('Dumlup\xc4\xb1nar \xc3\x9cniversitesi (K\xc3\xbctahya)', 'Dumlup\xc4\xb1nar \xc3\x9cniversitesi (K\xc3\xbctahya)'), ('D\xc3\xbczce \xc3\x9cniversitesi (D\xc3\xbczce)', 'D\xc3\xbczce \xc3\x9cniversitesi (D\xc3\xbczce)'), ('Ege \xc3\x9cniversitesi (\xc4\xb0zmir)', 'Ege \xc3\x9cniversitesi (\xc4\xb0zmir)'), ('Erciyes \xc3\x9cniversitesi (Kayseri)', 'Erciyes \xc3\x9cniversitesi (Kayseri)'), ('Erzincan \xc3\x9cniversitesi (Erzincan)', 'Erzincan \xc3\x9cniversitesi (Erzincan)'), ('Erzurum Teknik \xc3\x9cniversitesi (Erzurum)', 'Erzurum \xc3\x9cniversitesi (Erzurum)'), ('Eski\xc5\x9fehir Osmangazi \xc3\x9cniversitesi (Eski\xc5\x9fehir)', 'Eski\xc5\x9fehir Osmangazi \xc3\x9cniversitesi (Eski\xc5\x9fehir)'), ('Faruk Sara\xc3\xa7 Tasar\xc4\xb1m Meslek Y\xc3\xbcksek Okulu (Bursa)', 'Faruk Sara\xc3\xa7 Tasar\xc4\xb1m Meslek Y\xc3\xbcksek Okulu (Bursa)'), ('Fatih Sultan Mehmet Vak\xc4\xb1f \xc3\x9cniversitesi (\xc4\xb0stanbul)', 'Fatih Sultan Mehmet Vak\xc4\xb1f \xc3\x9cniversitesi (\xc4\xb0stanbul)'), ('Fatih \xc3\x9cniversitesi (\xc4\xb0stanbul)', 'Fatih \xc3\x9cniversitesi (\xc4\xb0stanbul)'), ('F\xc4\xb1rat \xc3\x9cniversitesi (Elaz\xc4\xb1\xc4\x9f)', 'F\xc4\xb1rat \xc3\x9cniversitesi (Elaz\xc4\xb1\xc4\x9f)'), ('Galatasaray \xc3\x9cniversitesi (\xc4\xb0stanbul)', 'Galatasaray \xc3\x9cniversitesi (\xc4\xb0stanbul)'), ('Gazi \xc3\x9cniversitesi (Ankara)', 'Gazi \xc3\x9cniversitesi (Ankara)'), ('Gaziantep \xc3\x9cniversitesi(Gaziantep)', 'Gaziantep \xc3\x9cniversitesi(Gaziantep)'), ('Gaziosmanpa\xc5\x9fa \xc3\x9cniversitesi (Tokat)', 'Gaziosmanpa\xc5\x9fa \xc3\x9cniversitesi (Tokat)'), ('Gebze Y\xc3\xbcksek Teknoloji Enstit\xc3\xbcs\xc3\xbc(\xc4\xb0zmit-Kocaeli)', 'Gebze Y\xc3\xbcksek Teknoloji Enstit\xc3\xbcs\xc3\xbc(\xc4\xb0zmit-Kocaeli)'), ('Gedik \xc3\x9cniversitesi (\xc4\xb0stanbul)', 'Gedik \xc3\x9cniversitesi (\xc4\xb0stanbul)'), ('Gediz \xc3\x9cniversitesi (\xc4\xb0zmir)', 'Gediz \xc3\x9cniversitesi (\xc4\xb0zmir)'), ('Giresun \xc3\x9cniversitesi (Giresun)', 'Giresun \xc3\x9cniversitesi (Giresun)'), ('G\xc3\xbcm\xc3\xbc\xc5\x9fhane \xc3\x9cniversitesi (G\xc3\xbcm\xc3\xbc\xc5\x9fhane)', 'G\xc3\xbcm\xc3\xbc\xc5\x9fhane \xc3\x9cniversitesi (G\xc3\xbcm\xc3\xbc\xc5\x9fhane)'), ('Hacettepe \xc3\x9cniversitesi (Ankara)', 'Hacettepe \xc3\x9cniversitesi (Ankara)'), ('Hakkari \xc3\x9cniversitesi (Hakkari)', 'Hakkari \xc3\x9cniversitesi (Hakkari)'), ('Hali\xc3\xa7 \xc3\x9cniversitesi(\xc4\xb0stanbul)', 'Hali\xc3\xa7 \xc3\x9cniversitesi(\xc4\xb0stanbul)'), ('Harran \xc3\x9cniversitesi (\xc5\x9eanl\xc4\xb1urfa)', 'Harran \xc3\x9cniversitesi (\xc5\x9eanl\xc4\xb1urfa)'), ('Hasan Kalyoncu \xc3\x9cniversitesi (Gaziantep)', 'Hasan Kalyoncu \xc3\x9cniversitesi (Gaziantep)'), ('Hitit \xc3\x9cniversitesi (\xc3\x87orum)', 'Hitit \xc3\x9cniversitesi (\xc3\x87orum)'), ('I\xc4\x9fd\xc4\xb1r \xc3\x9cniversitesi (I\xc4\x9fd\xc4\xb1r)', 'I\xc4\x9fd\xc4\xb1r \xc3\x9cniversitesi (I\xc4\x9fd\xc4\xb1r)'), ('I\xc5\x9f\xc4\xb1k \xc3\x9cniversitesi (\xc4\xb0stanbul)', 'I\xc5\x9f\xc4\xb1k \xc3\x9cniversitesi (\xc4\xb0stanbul)'), ('\xc4\xb0n\xc3\xb6n\xc3\xbc \xc3\x9cniversitesi (Malatya)', '\xc4\xb0n\xc3\xb6n\xc3\xbc \xc3\x9cniversitesi (Malatya)'), ('\xc4\xb0pek \xc3\x9cniversitesi (Ankara)', '\xc4\xb0pek \xc3\x9cniversitesi (Ankara)'), ('\xc4\xb0skenderun Teknik \xc3\x9cniversitesi (Hatay)', '\xc4\xb0skenderun Teknik \xc3\x9cniversitesi (Hatay)'), ('\xc4\xb0stanbul Arel \xc3\x9cniversitesi(\xc4\xb0stanbul)', '\xc4\xb0stanbul Arel \xc3\x9cniversitesi(\xc4\xb0stanbul)'), ('\xc4\xb0stanbul Ayd\xc4\xb1n \xc3\x9cniversitesi(\xc4\xb0stanbul)', '\xc4\xb0stanbul Ayd\xc4\xb1n \xc3\x9cniversitesi(\xc4\xb0stanbul)'), ('\xc4\xb0stanbul \xc3\x9cniversitesi(\xc4\xb0stanbul)', '\xc4\xb0stanbul \xc3\x9cniversitesi(\xc4\xb0stanbul)'), ('\xc4\xb0stanbul Bilgi \xc3\x9cniversitesi(\xc4\xb0stanbul)', '\xc4\xb0stanbul Bilgi \xc3\x9cniversitesi(\xc4\xb0stanbul)'), ('\xc4\xb0stanbul Bilim \xc3\x9cniversitesi(\xc4\xb0stanbul)', '\xc4\xb0stanbul Bilim \xc3\x9cniversitesi(\xc4\xb0stanbul)'), ('\xc4\xb0stanbul Esenyurt \xc3\x9cniversitesi(\xc4\xb0stanbul)', '\xc4\xb0stanbul Esenyurt \xc3\x9cniversitesi(\xc4\xb0stanbul)'), ('\xc4\xb0stanbul Geli\xc5\x9fim \xc3\x9cniversitesi(\xc4\xb0stanbul)', '\xc4\xb0stanbul Geli\xc5\x9fim \xc3\x9cniversitesi(\xc4\xb0stanbul)'), ('\xc4\xb0stanbul Kavram Meslek Y\xc3\xbcksek Okulu(\xc4\xb0stanbul)', '\xc4\xb0stanbul Kavram Meslek Y\xc3\xbcksek Okulu(\xc4\xb0stanbul)'), ('\xc4\xb0stanbul Kemerburgaz \xc3\x9cniversitesi(\xc4\xb0stanbul)', '\xc4\xb0stanbul Kemerburgaz \xc3\x9cniversitesi(\xc4\xb0stanbul)'), ('\xc4\xb0stanbul K\xc3\xbclt\xc3\xbcr \xc3\x9cniversitesi(\xc4\xb0stanbul)', '\xc4\xb0stanbul K\xc3\xbclt\xc3\xbcr \xc3\x9cniversitesi(\xc4\xb0stanbul)'), ('\xc4\xb0stanbul Medeniyet \xc3\x9cniversitesi(\xc4\xb0stanbul)', '\xc4\xb0stanbul Medeniyet \xc3\x9cniversitesi(\xc4\xb0stanbul)'), ('\xc4\xb0stanbul Medipol \xc3\x9cniversitesi(\xc4\xb0stanbul)', '\xc4\xb0stanbul Medipol \xc3\x9cniversitesi(\xc4\xb0stanbul)'), ('\xc4\xb0stanbul Rumeli \xc3\x9cniversitesi(\xc4\xb0stanbul)', '\xc4\xb0stanbul Rumeli \xc3\x9cniversitesi(\xc4\xb0stanbul)'), ('\xc4\xb0stanbul Sabahattin Zaim \xc3\x9cniversitesi(\xc4\xb0stanbul)', '\xc4\xb0stanbul Sabahattin Zaim \xc3\x9cniversitesi(\xc4\xb0stanbul)'), ('\xc4\xb0stanbul \xc5\x9eehir \xc3\x9cniversitesi(\xc4\xb0stanbul)', '\xc4\xb0stanbul \xc5\x9eehir \xc3\x9cniversitesi(\xc4\xb0stanbul)'), ('\xc4\xb0stanbul \xc5\x9ei\xc5\x9fli Meslek Y\xc3\xbcksek Okulu(\xc4\xb0stanbul)', '\xc4\xb0stanbul \xc5\x9ei\xc5\x9fli Meslek Y\xc3\xbcksek Okulu(\xc4\xb0stanbul)'), ('\xc4\xb0stanbul Teknik \xc3\x9cniversitesi(\xc4\xb0stanbul)', '\xc4\xb0stanbul Teknik \xc3\x9cniversitesi(\xc4\xb0stanbul)'), ('\xc4\xb0stanbul Ticaret \xc3\x9cniversitesi(\xc4\xb0stanbul)', '\xc4\xb0stanbul Ticaret \xc3\x9cniversitesi(\xc4\xb0stanbul)'), ('\xc4\xb0stanbul 29 May\xc4\xb1s \xc3\x9cniversitesi(\xc4\xb0stanbul)', '\xc4\xb0stanbul 29 May\xc4\xb1s \xc3\x9cniversitesi(\xc4\xb0stanbul)'), ('\xc4\xb0zmir Y\xc3\xbcksek Teknoloji Enstit\xc3\xbcs\xc3\xbc(\xc4\xb0zmir)', '\xc4\xb0zmir Y\xc3\xbcksek Teknoloji Enstit\xc3\xbcs\xc3\xbc(\xc4\xb0zmir)'), ('\xc4\xb0zmir Ekonomi \xc3\x9cniversitesi(\xc4\xb0zmir)', '\xc4\xb0zmir Ekonomi \xc3\x9cniversitesi(\xc4\xb0zmir)'), ('\xc4\xb0zmir Katip \xc3\x87elebi \xc3\x9cniversitesi(\xc4\xb0zmir)', '\xc4\xb0zmir Katip \xc3\x87elebi \xc3\x9cniversitesi(\xc4\xb0zmir)'), ('\xc4\xb0zmir \xc3\x9cniversitesi(\xc4\xb0zmir)', '\xc4\xb0zmir \xc3\x9cniversitesi(\xc4\xb0zmir)'), ('Kadir Has \xc3\x9cniversitesi(\xc4\xb0stanbul)', 'Kadir Has \xc3\x9cniversitesi(\xc4\xb0stanbul)'), ('Kafkas \xc3\x9cniversitesi (Kars)', 'Kafkas \xc3\x9cniversitesi (Kars)'), ('Kahramanmara\xc5\x9f S\xc3\xbct\xc3\xa7\xc3\xbc \xc4\xb0mam \xc3\x9cniversitesi(Kahramanmara\xc5\x9f)', 'Kahramanmara\xc5\x9f S\xc3\xbct\xc3\xa7\xc3\xbc \xc4\xb0mam \xc3\x9cniversitesi(Kahramanmara\xc5\x9f)'), ('Kanuni \xc3\x9cniversitesi (Adana)', 'Kanuni \xc3\x9cniversitesi (Adana)'), ('Kapadokya Meslek Y\xc3\xbcksek Okulu (Nev\xc5\x9fehir)', 'Kapadokya Meslek Y\xc3\xbcksek Okulu \xc3\x9cniversitesi (Nev\xc5\x9fehir)'), ('Karabuk Universitesi (Karabuk)', 'Karabuk Universitesi (Karabuk)'), ('Karadeniz Teknik \xc3\x9cniversitesi (Trabzon)', 'Karadeniz Teknik \xc3\x9cniversitesi (Trabzon)'), ('Karamano\xc4\x9flu Mehmetbey \xc3\x9cniversitesi(Karaman)', 'Karamano\xc4\x9flu Mehmetbey \xc3\x9cniversitesi(Karaman)'), ('Kastamonu \xc3\x9cniversitesi(Kastamonu)', 'Kastamonu \xc3\x9cniversitesi(Kastamonu)'), ('K\xc4\xb1r\xc4\xb1kkale \xc3\x9cniversitesi(K\xc4\xb1r\xc4\xb1kkale)', 'K\xc4\xb1r\xc4\xb1kkale \xc3\x9cniversitesi(K\xc4\xb1r\xc4\xb1kkale)'), ('K\xc4\xb1rklareli \xc3\x9cniversitesi(K\xc4\xb1rklareli)', 'K\xc4\xb1rklareli \xc3\x9cniversitesi(K\xc4\xb1rklareli)'), ('Kilis 7 Aral\xc4\xb1k \xc3\x9cniversitesi(Kilis)', 'Kilis 7 Aral\xc4\xb1k \xc3\x9cniversitesi(Kilis)'), ('Kocaeli \xc3\x9cniversitesi(Kocaeli-\xc4\xb0zmit)', 'Kocaeli \xc3\x9cniversitesi(Kocaeli-\xc4\xb0zmit)'), ('Ko\xc3\xa7 \xc3\x9cniversitesi (\xc4\xb0stanbul)', 'Ko\xc3\xa7 \xc3\x9cniversitesi (\xc4\xb0stanbul)'), ('Konya G\xc4\xb1da ve Tasar\xc4\xb1m \xc3\x9cniversitesi (Konya)', 'Konya G\xc4\xb1da ve Tasar\xc4\xb1m \xc3\x9cniversitesi (Konya)'), ('KTO Karatay \xc3\x9cniversitesi (Konya)', 'KTO Karatay \xc3\x9cniversitesi (Konya)'), ('Mardin Artuklu \xc3\x9cniversitesi (Mardin)', 'Mardin Artuklu \xc3\x9cniversitesi (Mardin)'), ('Maltepe \xc3\x9cniversitesi (\xc4\xb0stanbul)', 'Maltepe \xc3\x9cniversitesi (\xc4\xb0stanbul)'), ('Marmara \xc3\x9cniversitesi (\xc4\xb0stanbul)', 'Marmara \xc3\x9cniversitesi (\xc4\xb0stanbul)'), ('MEF \xc3\x9cniversitesi (\xc4\xb0stanbul)', 'MEF \xc3\x9cniversitesi (\xc4\xb0stanbul)'), ('Mehmet Akif Ersoy \xc3\x9cniversitesi (Burdur)', 'Mehmet Akif Ersoy \xc3\x9cniversitesi (Burdur)'), ('Melik\xc5\x9fah \xc3\x9cniversitesi (Kayseri)', 'Melik\xc5\x9fah \xc3\x9cniversitesi (Kayseri)'), ('Mersin \xc3\x9cniversitesi(Mersin-\xc4\xb0\xc3\xa7el)', 'Mersin \xc3\x9cniversitesi(Mersin-\xc4\xb0\xc3\xa7el)'), ('Mevlana \xc3\x9cniversitesi(Konya)', 'Mevlana \xc3\x9cniversitesi(Konya)'), ('Mimar Sinan \xc3\x9cniversitesi (\xc4\xb0stanbul)', 'Mimar Sinan \xc3\x9cniversitesi (\xc4\xb0stanbul)'), ('Mu\xc4\x9fla \xc3\x9cniversitesi(Mu\xc4\x9fla)', 'Mu\xc4\x9fla \xc3\x9cniversitesi(Mu\xc4\x9fla)'), ('Murat\tH\xc3\xbcdavendigar \xc3\x9cniversitesi(\xc4\xb0stanbul)', 'Murat H\xc3\xbcdavendigar \xc3\x9cniversitesi(\xc4\xb0stanbul)'), ('Mustafa Kemal \xc3\x9cniversitesi (Hatay)', 'Mustafa Kemal \xc3\x9cniversitesi (Hatay)'), ('Mu\xc5\x9f Alparslan \xc3\x9cniversitesi(Mu\xc5\x9f)', 'Mu\xc5\x9f Alparslan \xc3\x9cniversitesi(Mu\xc5\x9f)'), ('Nam\xc4\xb1k Kemal \xc3\x9cniversitesi(Tekirda\xc4\x9f)', 'Nam\xc4\xb1k Kemal \xc3\x9cniversitesi(Tekirda\xc4\x9f)'), ('Necmettin Erbakan \xc3\x9cniversitesi(Konya)', 'Necmettin Erbakan \xc3\x9cniversitesi(Konya)'), ('Nev\xc5\x9fehir Hac\xc4\xb1bekta\xc5\x9f \xc3\x9cniversitesi(Nev\xc5\x9fehir)', 'Nev\xc5\x9fehir \xc3\x9cniversitesi(Nev\xc5\x9fehir)'), ('Ni\xc4\x9fde \xc3\x9cniversitesi(Ni\xc4\x9fde)', 'Ni\xc4\x9fde \xc3\x9cniversitesi(Ni\xc4\x9fde)'), ('Ni\xc5\x9fanta\xc5\x9f\xc4\xb1 \xc3\x9cniversitesi(\xc4\xb0stanbul)', 'Ni\xc5\x9fanta\xc5\x9f\xc4\xb1 \xc3\x9cniversitesi(\xc4\xb0stanbul)'), ('Nuh Naci Yazgan \xc3\x9cniversitesi(Kayseri)', 'Nuh Naci Yazgan \xc3\x9cniversitesi(Kayseri)'), ('Okan \xc3\x9cniversitesi(\xc4\xb0stanbul)', 'Okan \xc3\x9cniversitesi(\xc4\xb0stanbul)'), ('Ondokuz May\xc4\xb1s \xc3\x9cniversitesi (Samsun)', 'Ondokuz May\xc4\xb1s \xc3\x9cniversitesi (Samsun)'), ('Orta Do\xc4\x9fu Teknik \xc3\x9cniversitesi (Ankara)', 'Orta Do\xc4\x9fu Teknik \xc3\x9cniversitesi (Ankara)'), ('Ordu \xc3\x9cniversitesi (Ordu)', 'Ordu \xc3\x9cniversitesi (Ordu)'), ('Osmaniye Korkut Ata \xc3\x9cniversitesi (Osmaniye)', 'Osmaniye Korkut Ata \xc3\x9cniversitesi (Osmaniye)'), ('\xc3\x96zye\xc4\x9fin \xc3\x9cniversitesi (\xc4\xb0stanbul)', '\xc3\x96zye\xc4\x9fin \xc3\x9cniversitesi (\xc4\xb0stanbul)'), ('Pamukkale \xc3\x9cniversitesi (Denizli)', 'Pamukkale \xc3\x9cniversitesi (Denizli)'), ('Piri Reis \xc3\x9cniversitesi (Denizli)', 'Piri Reis \xc3\x9cniversitesi (Denizli)'), ('Plato Meslek Y\xc3\xbcksek Okulu (\xc4\xb0stanbul)', 'Plato Meslek Y\xc3\xbcksek Okulu (\xc4\xb0stanbul)'), ('Recep Tayyip Erdo\xc4\x9fan \xc3\x9cniversitesi (Rize)', 'Recep Tayyip Erdo\xc4\x9fan \xc3\x9cniversitesi (Rize)'), ('Sabanc\xc4\xb1 \xc3\x9cniversitesi(\xc4\xb0stanbul)', 'Sabanc\xc4\xb1 \xc3\x9cniversitesi(\xc4\xb0stanbul)'), ('Sa\xc4\x9fl\xc4\xb1k Bilimleri \xc3\x9cniversitesi(\xc4\xb0stanbul)', 'Sa\xc4\x9fl\xc4\xb1k Bilimleri \xc3\x9cniversitesi(\xc4\xb0stanbul)'), ('Sakarya \xc3\x9cniversitesi(Sakarya-Adapazar\xc4\xb1)', 'Sakarya \xc3\x9cniversitesi(Sakarya-Adapazar\xc4\xb1)'), ('Sanko \xc3\x9cniversitesi (Gaziantep)', 'Sanko \xc3\x9cniversitesi (Gaziantep)'), ('Selahaddin Eyyubi \xc3\x9cniversitesi (Diyarbak\xc4\xb1r)', 'Selahaddin Eyyubi \xc3\x9cniversitesi (Diyarbak\xc4\xb1r)'), ('Sel\xc3\xa7uk \xc3\x9cniversitesi (Konya)', 'Sel\xc3\xa7uk \xc3\x9cniversitesi (Konya)'), ('Siirt \xc3\x9cniversitesi (Siirt)', 'Siirt \xc3\x9cniversitesi (Siirt)'), ('Sinop \xc3\x9cniversitesi (Sinop)', 'Sinop \xc3\x9cniversitesi (Sinop)'), ('S\xc3\xbcleyman Demirel \xc3\x9cniversitesi (Isparta)', 'S\xc3\xbcleyman Demirel \xc3\x9cniversitesi (Isparta)'), ('S\xc3\xbcleyman \xc5\x9eah \xc3\x9cniversitesi (\xc4\xb0stanbul)', 'S\xc3\xbcleyman \xc5\x9eah \xc3\x9cniversitesi (\xc4\xb0stanbul)'), ('\xc5\x9e\xc4\xb1rnak \xc3\x9cniversitesi (\xc5\x9e\xc4\xb1rnak)', '\xc5\x9e\xc4\xb1rnak \xc3\x9cniversitesi (\xc5\x9e\xc4\xb1rnak)'), ('\xc5\x9eifa \xc3\x9cniversitesi (\xc4\xb0zmir)', '\xc5\x9eifa \xc3\x9cniversitesi (\xc4\xb0zmir)'), ('Trakya \xc3\x9cniversitesi (Edirne)', 'Trakya \xc3\x9cniversitesi (Edirne)'), ('TED \xc3\x9cniversitesi (Ankara)', 'TED \xc3\x9cniversitesi (Ankara)'), ('TOBB Ekonomi ve Teknoloji \xc3\x9cniversitesi(Ankara)', 'TOBB Ekonomi ve Teknoloji \xc3\x9cniversitesi(Ankara)'), ('Toros \xc3\x9cniversitesi (Mersin)', 'Toros \xc3\x9cniversitesi (Mersin)'), ('Trakya \xc3\x9cniversitesi (Edirne)', 'Trakya \xc3\x9cniversitesi (Edirne)'), ('Tunceli \xc3\x9cniversitesi (Tunceli)', 'Tunceli \xc3\x9cniversitesi (Tunceli)'), ('Turgut \xc3\x96zal \xc3\x9cniversitesi (Ankara)', 'Turgut \xc3\x96zal \xc3\x9cniversitesi (Ankara)'), ('T\xc3\xbcrk Hava Kurumu \xc3\x9cniversitesi (Ankara)', 'T\xc3\xbcrk Hava Kurumu \xc3\x9cniversitesi (Ankara)'), ('T\xc3\xbcrk-Alman \xc3\x9cniversitesi (\xc4\xb0stanbul)', 'T\xc3\xbcrk-Alman \xc3\x9cniversitesi (\xc4\xb0stanbul)'), ('Ufuk \xc3\x9cniversitesi (Ankara)', 'Ufuk \xc3\x9cniversitesi (Ankara)'), ('Uluda\xc4\x9f \xc3\x9cniversitesi (Bursa)', 'Uluda\xc4\x9f \xc3\x9cniversitesi (Bursa)'), ('Uluslararas\xc4\xb1 Antalya \xc3\x9cniversitesi (Antalya)', 'Uluslararas\xc4\xb1 Antalya \xc3\x9cniversitesi (Antalya)'), ('U\xc5\x9fak \xc3\x9cniversitesi (U\xc5\x9fak)', 'U\xc5\x9fak \xc3\x9cniversitesi (U\xc5\x9fak)'), ('\xc3\x9csk\xc3\xbcdar \xc3\x9cniversitesi (\xc4\xb0stanbul)', '\xc3\x9csk\xc3\xbcdar \xc3\x9cniversitesi (\xc4\xb0stanbul)'), ('Yalova \xc3\x9cniversitesi (Yalova)', 'Yalova \xc3\x9cniversitesi (Yalova)'), ('Ya\xc5\x9far \xc3\x9cniversitesi (\xc4\xb0zmir)', 'Ya\xc5\x9far \xc3\x9cniversitesi (\xc4\xb0zmir)'), ('Yeditepe \xc3\x9cniversitesi (\xc4\xb0stanbul)', 'Yeditepe \xc3\x9cniversitesi (\xc4\xb0stanbul)'), ('Yeni Y\xc3\xbczy\xc4\xb1l \xc3\x9cniversitesi (\xc4\xb0stanbul)', 'Yeni Y\xc3\xbczy\xc4\xb1l \xc3\x9cniversitesi (\xc4\xb0stanbul)'), ('Y\xc4\xb1ld\xc4\xb1z Teknik \xc3\x9cniversitesi (\xc4\xb0stanbul)', 'Y\xc4\xb1ld\xc4\xb1z Teknik \xc3\x9cniversitesi (\xc4\xb0stanbul)'), ('Y\xc4\xb1ld\xc4\xb1r\xc4\xb1m Beyaz\xc4\xb1t \xc3\x9cniversitesi (Ankara)', 'Y\xc4\xb1ld\xc4\xb1r\xc4\xb1m Beyaz\xc4\xb1t \xc3\x9cniversitesi (Ankara)'), ('Y\xc3\xbcksek \xc4\xb0htisas \xc3\x9cniversitesi (Ankara)', 'Y\xc3\xbcksek \xc4\xb0htisas \xc3\x9cniversitesi (Ankara)'), ('Y\xc3\xbcz\xc3\xbcnc\xc3\xbc Y\xc4\xb1l \xc3\x9cniversitesi (Van)', 'Y\xc3\xbcz\xc3\xbcnc\xc3\xbc Y\xc4\xb1l \xc3\x9cniversitesi (Van)'), ('Zonguldak Karaelmas \xc3\x9cniversitesi(Zonguldak)', 'Zonguldak Karaelmas \xc3\x9cniversitesi(Zonguldak)')])),
                ('department', models.CharField(max_length=50, verbose_name='Department')),
                ('is_instructor', models.BooleanField(default=False, verbose_name='Is Instructor')),
                ('is_student', models.BooleanField(default=False, verbose_name='Is Student')),
                ('is_speaker', models.BooleanField(default=False, verbose_name='Is Speaker')),
                ('is_participant', models.BooleanField(default=False, verbose_name='Is Participant')),
                ('additional_information', models.TextField(null=True, verbose_name='Additional Information')),
                ('userpassedtest', models.BooleanField(default=False, verbose_name='Basvuru yapabilir mi?')),
                ('score', models.CharField(default='1', max_length=100, verbose_name='Durum', choices=[('0', 'Gelmedi'), ('1', 'Geldi')])),
                ('user', models.OneToOneField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('user__username',),
            },
        ),
        migrations.CreateModel(
            name='UserVerification',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('user_email', models.CharField(max_length=40)),
                ('activation_key', models.CharField(max_length=40, null=True)),
                ('password_reset_key', models.CharField(max_length=40, null=True)),
                ('activation_key_expires', models.DateTimeField(null=True)),
                ('password_reset_key_expires', models.DateTimeField(null=True)),
            ],
        ),
        migrations.AddField(
            model_name='useraccomodationpref',
            name='user',
            field=models.ForeignKey(to='userprofile.UserProfile'),
        ),
        migrations.AddField(
            model_name='trainessnote',
            name='note_from_profile',
            field=models.ForeignKey(related_name='note_from_profile', to='userprofile.UserProfile', null=True),
        ),
        migrations.AddField(
            model_name='trainessnote',
            name='note_to_profile',
            field=models.ForeignKey(related_name='note_to_profile', to='userprofile.UserProfile'),
        ),
        migrations.AddField(
            model_name='trainessnote',
            name='site',
            field=models.ForeignKey(to='mudur.Site'),
        ),
        migrations.AddField(
            model_name='instructorinformation',
            name='user',
            field=models.ForeignKey(to='userprofile.UserProfile'),
        ),
    ]
